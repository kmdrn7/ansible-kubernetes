##################################################
# Install Kubenetes Cluster
##################################################
---
- hosts: master
  become: true
  vars_files:
  - vars/default.yml

  tasks:
  - name: Switch off swap
    command: swapoff -a

  - name: Disable Swap in /etc/fstab
    mount:
      name: swap
      fstype: swap
      state: absent

  - name: Add br_netfilter module
    modprobe:
      name: br_netfilter
      state: present

  - name: Enable ipv4 forwarding, iptable bridge
    sysctl:
      name: "{{ item }}"
      value: '1'
      sysctl_file: /etc/sysctl.d/11-kubernetes.conf
      sysctl_set: yes
      reload: yes
    loop:
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

  - name: Install Device Mapper & LVM2
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - device-mapper-persistent-data
      - lvm2
  
  - name: Add Docker Repository
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docker-ce.repo

  - name: Add Kubernetes Repository
    yum_repository:
      name: Kubernetes
      file: Kubernetes
      description: Kubernetes
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      enabled: yes
      gpgcheck: yes

  - name: Install Docker Container Engine
    yum: 
      name: "{{ packages }}"
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  - name: Enable and Run Docker
    systemd:
      name: docker
      enabled: yes
      state: started
  
  - name: Install Kubelet, Kubeadm, Kubectl
    yum: 
      name: "{{ packages }}"
    vars:
      packages:
      - kubelet
      - kubeadm
      - kubectl

  - name: Enable and Run Kubelet
    systemd:
      name: kubelet
      enabled: yes
      state: started

  - name: Setting sebool container_manage_cgroup
    seboolean:
      name: container_manage_cgroup
      state: yes
      persistent: yes

  - name: Enable firewall port 6443 for kubernetes
    firewalld:
      port: "{{ item }}"
      permanent: yes
      immediate: yes
      state: enabled
    loop:
    - 6443/tcp
    - 10250/tcp

  - name: Reset Kubernetes cluster
    shell: |
      kubeadm reset --force
    register: reset_cluster

  - name: Check if kubeadm has already run
    stat:
      path: "/etc/kubernetes/pki/ca.key"
    register: kubeadm_ca

  - name: Init Kubernetes cluster
    shell: |
      kubeadm init --kubernetes-version {{ kubernetes_version }} \
                  --service-cidr {{ network_service_cidr }} \
                  --pod-network-cidr {{ network_pod_cidr }} \
                  --token {{ kube_master_token }} \
                  --apiserver-advertise-address {{ kube_master_ip }} \
                  --ignore-preflight-errors all
    when: not kubeadm_ca.stat.exists
    register: init_cluster

  - name: Create a directory .kube
    file:
      path: ~/.kube
      state: directory
      mode: '0755'

  - name: Copy kubeconfig
    copy:
      src: /etc/kubernetes/admin.conf
      dest: ~/.kube/config
      remote_src: yes
      owner: root
      group: root
      mode: '0644'

  - name: Copy calico cni config
    copy:
      src: ./files/kubernetes/calico.yaml
      dest: /opt/yaml/calico.yaml
      owner: root
      group: root
      mode: '0644'

  - name: Apply calico cni
    command: kubectl apply -f /opt/yaml/calico.yaml